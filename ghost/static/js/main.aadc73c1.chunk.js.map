{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm/legacy lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","model/GhostCharacteristics.ts","ble/GhostBle.ts","store/reducers/bleReducer.ts","pages/Dashboard/Dashboard.tsx","pages/Connect/Connect.tsx","App.tsx","serviceWorker.ts","store/index.ts","store/store.ts","index.tsx","assets/logo.svg"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","GhostCharacteristics","uuid","label","properties","notify","read","write","type","stringToHex","value","buffer","ArrayBuffer","dv","DataView","i","setUint8","parseInt","substr","hexToString","rawValue","bits","s","byteLength","getUint8","toString","getUint16","padStart","readCharacteristicStringValue","characteristic","a","async","readValue","readCharacteristicNumberValue","readTemperatures","values","push","writeTemperatures","length","currentValue","setUint16","writeValue","ghostBle","dispatch","getState","device","server","service","batteryService","authCharacteristic","batteryCharacteristic","currentProfileCharacteristic","temperatureCharacteristic","bootStateCharacteristic","statusCharacteristic","queue","TaskQueue","autorun","stoppable","initialize","initializeBle","allDevices","gatt","navigator","bluetooth","requestDevice","optionalServices","acceptAllDevices","nameFilters","deviceName","localStorage","getItem","name","toLowerCase","toUpperCase","filters","services","setItem","ongattserverdisconnected","event","connectFailed","connectStart","connect","setTimeout","getPrimaryService","pair","connected","getCharacteristic","addEventListener","ev","stopNotifications","setAuthKey","startNotifications","key","ble","updating","enqueue","statusValue","status","setStatus","profileValue","profile","setCurrentProfile","temperatureValue","oldTempValue","temperatures","filter","index","setTemperatures","batteryValue","setBatteryLevel","disconnect","removeEventListener","updateCurrentProfile","hexValue","updateTemperature","n","lock","unlock","pauseNotifications","initialState","connecting","connectAttempts","locked","authKey","battery","GhostBle","connectSuccess","startUpdateProfile","setCurrentProfileForce","completeUpdateProfile","startUpdate","completeUpdate","bleSlice","createSlice","reducers","state","action","error","undefined","payload","disconnected","clearError","requestLock","locking","requestUnlock","completeLock","completeUnlock","actions","slideLabels","version","require","Dashboard","props","useSelector","useDispatch","useState","currentProfile","tempDialogOpen","setTempDialogOpen","slider","createRef","currentTemp","useRef","updateTemperatureDispatch","useCallback","newTemp","slice","useEffect","current","getActiveIndex","console","log","slideTo","className","class","slot","width","height","stroke","strokeWidth","x","y","rx","ry","Math","round","src","logoSvg","lines","options","allowSlideNext","allowSlidePrev","initialSlide","pager","ref","onIonSlideDidChange","temperature","title","onClick","toFixed","hidden","min","max","step","snaps","color","onIonChange","detail","size","icon","thermometer","isOpen","onDidDismiss","header","inputs","placeholder","buttons","text","role","cssClass","handler","displayLockDialog","dismissLockDialogCallback","message","Connect","history","pairingMode","setPairingMode","cancel","setCancel","loadingMessage","setLoadingMessage","hasKey","pairBLE","connectBLE","newMessage","elem","document","querySelector","innerHTML","defaultChecked","checked","backdropDismiss","App","setDisplayLockDialog","unloadFunc","window","ConnectRedirect","to","requestLockClicked","path","component","exact","tab","href","speedometer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","rootReducer","combineReducers","bleReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","getElementById","URL","process","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qwCAAA,IAAIA,EAAM,CACT,2CAA4C,CAC3C,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,qBAAsB,CACrB,IACA,IAED,uCAAwC,CACvC,IACA,IAED,sCAAuC,CACtC,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mCAAoC,CACnC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,iCAAkC,CACjC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,gCAAiC,CAChC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,G,oBC5UjB,IAAID,EAAM,CACT,sBAAuB,CACtB,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,G,0bCxBJgB,EACW,kBADXA,EAES,gBAFTA,EAGI,uCAHJA,EAIG,uCAJHA,EAKI,uCALJA,EAgBD,CACJC,KAAM,uCACNC,MAAO,SACPC,WAAY,CACRC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,KAAM,QAvBLP,EAoCK,CACVC,KAAM,uCACNC,MAAO,eACPC,WAAY,CACRC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,KAAM,QA3CLP,EA8CO,CACZC,KAAM,uCACNC,MAAO,UACPC,WAAY,CACRC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,KAAM,QArDLP,EAwDG,CACRC,KAAM,uCACNC,MAAO,cACPC,WAAY,CACRC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,KAAM,Q,kBCsSLC,EAAc,SAACC,GAGxB,IAFA,IAAMC,EAAS,IAAIC,YAAY,GACzBC,EAAK,IAAIC,SAASH,GACfI,EAAI,EAAGA,EAAI,EAAGA,IACnBF,EAAGG,SAASD,EAAGE,SAASP,EAAMQ,OAAW,EAAJH,EAAO,GAAI,KAEpD,OAAOF,GAGEM,EAAc,SAACC,GAAkD,IAA9BC,EAA6B,uDAAd,EACvDC,EAAI,GACR,GAAIF,GAAaA,EAASG,WAAa,EACnC,GAAa,IAATF,EACA,IAAK,IAAIN,EAAI,EAAGA,EAAIK,EAASG,WAAYR,IACrCO,GAAKF,EAASI,SAAST,GAAGU,SAAS,SAEpC,GAAa,KAATJ,EACP,IAAK,IAAIN,EAAI,EAAGA,EAAIK,EAASG,WAAYR,GAAK,EAC1CO,GAAKF,EAASM,UAAUX,GAAG,GAAOU,SAAS,IAAIE,SAAS,EAAG,KAIvE,OAAOL,GAGEM,EAAgC,SAAOC,GAAP,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAClBD,EAAeG,aADG,cACnCZ,EADmC,yBAElCD,EAAYC,IAFsB,sCAKhCa,EAAgC,SAAOJ,GAAP,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAClBD,EAAeG,aADG,UAEb,KADtBZ,EADmC,QAE5BG,WAF4B,yCAG9BH,EAASI,SAAS,IAHY,UAIN,IAAxBJ,EAASG,WAJqB,yCAK9BH,EAASM,UAAU,GAAG,IALQ,gCAOlC,GAPkC,uCAUhCQ,EAAmB,SAAOL,GAAP,mBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACLD,EAAeG,aADV,OAG5B,IAFMZ,EADsB,OAEtBe,EAAS,GACNpB,EAAI,EAAGA,EAAIK,EAASG,WAAYR,GAAK,EAC1CoB,EAAOC,KAAKhB,EAASM,UAAUX,GAAG,IAJV,yBAMrBoB,GANqB,sCASnBE,EAAoB,SAAOR,EAAmDnB,GAA1D,qBAAAoB,EAAAC,OAAA,qDACzBrB,EAAM4B,OAAS,GADU,iDAKvB3B,EAAS,IAAIC,YAAY,IACzBC,EAAK,IAAIC,SAASH,GACfI,EAAI,EAPgB,YAObA,EAAI,GAPS,iBAQrBwB,EAAe7B,EAAMK,GARA,KASjBA,EATiB,OAUhB,IAVgB,QAchB,IAdgB,QAkBhB,IAlBgB,QAsBhB,IAtBgB,gCAWjBwB,EAAe,IAXE,oCAejBA,EAAe,IAfE,oCAmBjBA,EAAe,IAnBE,oCAuBjBA,EAAe,IAvBE,6BA2BzB1B,EAAG2B,UAAc,EAAJzB,EAAOwB,GAAc,GA3BT,QAONxB,IAPM,0CAAAe,EAAA,MA+BvBD,EAAeY,WAAW5B,IA/BH,uCA4C3B6B,EAAW,I,iDA1bbC,c,OACAC,c,OACAC,Y,OACAC,Y,OACAC,a,OACAC,oB,OACAC,wB,OACAC,2B,OACAC,kC,OACAC,+B,OACAC,6B,OACAC,0B,OAEQC,MAAmB,IAAIC,YAAU,CAAEC,SAAS,EAAMC,WAAW,I,KAErEC,WAAa,SAAChB,EAAoBC,GAC9B,EAAKD,SAAWA,EAChB,EAAKC,SAAWA,G,KAGZgB,cAAgB,SAAOC,GAAP,iBAAA/B,EAAAC,OAAA,mDACf,EAAKc,QAAW,EAAKA,OAAOiB,KADb,qBAEZD,EAFY,kCAAA/B,EAAA,MAGQiC,UAAUC,UAAUC,cAAc,CAClDC,iBAAkB,CAACjE,EAAkCA,GACrDkE,kBAAkB,KALV,OAGZ,EAAKtB,OAHO,qCASNuB,EAAc,IACdC,EAAaC,aAAaC,QAAQ,oBAEpCH,EAAYhC,KAAK,CAAEoC,KAAMH,IACzBD,EAAYhC,KAAK,CAAEoC,KAAMH,EAAWI,gBACpCL,EAAYhC,KAAK,CAAEoC,KAAMH,EAAWK,iBAd5B,YAAA5C,EAAA,MAgBQiC,UAAUC,UAAUC,cAAc,CAClDU,QAAQ,GAAD,OACAP,EADA,CAEH,CACIQ,SAAU,CAAC3E,IACZ,CACC2E,SAAU,CAAC3E,MAGnBiE,iBAAkB,CAACjE,EAAkCA,MAzB7C,QAgBZ,EAAK4C,OAhBO,kBA8BX,EAAKA,QAAW,EAAKA,OAAOiB,KA9BjB,uBA+BN,IAAIrE,MAAM,uCA/BJ,QAiCZ,EAAKoD,OAAO2B,MACZF,aAAaO,QAAQ,gBAAiB,EAAKhC,OAAO2B,MAGtD,EAAK3B,OAAOiC,yBAA2B,SAAOC,GAAP,SAAAjD,EAAAC,OAAA,kEAAAD,EAAA,MAC7B,EAAKa,SAAUqC,EAAc,mDADA,sCArCvB,2BAAAlD,EAAA,MA0Cd,EAAKa,SAAUsC,MA1CD,2BAAAnD,EAAA,MA4CA,EAAKe,OAAOiB,KAAKoB,WA5CjB,WA4CpB,EAAKpC,OA5Ce,OA6Cf,EAAKA,OA7CU,uBA8CV,IAAIrD,MAAM,kCA9CA,2BAAAqC,EAAA,MAiDd,IAAIzC,SAAQ,SAAAC,GAAO,OAAI6F,YAAW,kBAAM7F,MAAW,SAjDrC,2BAAAwC,EAAA,MAkDC,EAAKgB,OAAOsC,kBAAkBnF,IAlD/B,QAkDpB,EAAK8C,QAlDe,8C,KAqDxBsC,KAAO,SAAOxB,GAAP,SAAA/B,EAAAC,OAAA,mDACE,EAAKe,QAAW,EAAKA,OAAOwC,UAD9B,kCAAAxD,EAAA,MAEO,EAAK8B,cAAcC,IAF1B,yBAAA/B,EAAA,MAQ6B,EAAKiB,QAASwC,kBAAkBtF,EAAgCC,OAR7F,cAQH,EAAK+C,mBARF,kBAAAnB,EAAA,MAeG,IAAIzC,SAAQ,SAAMC,GAAN,SAAAwC,EAAAC,OAAA,uDACd,EAAKkB,mBAAoBuC,iBAAiB,8BAA8B,SAAOC,GAAP,eAAA3D,EAAAC,OAAA,kEAAAD,EAAA,MAC9D,EAAKmB,mBAAoByC,qBADqC,yBAAA5D,EAAA,MAEhDF,EAA8B,EAAKqB,qBAFa,cAE9DvC,EAF8D,OAGpE4D,aAAaO,QAAQ,gBAAiBnE,GAH8B,WAAAoB,EAAA,MAI9D,EAAKa,SAAUgD,EAAWjF,KAJoC,0BAAAoB,EAAA,MAK9D,EAAKmB,mBAAoBR,WAAWhC,EAAYC,KALc,QAOpEpB,IAPoE,yCAD1D,WAAAwC,EAAA,MAUR,EAAKmB,mBAAoB2C,sBAVjB,yBAAA9D,EAAA,MAWR,EAAKmB,mBAAoBjB,aAXjB,yCAff,0BAAAF,EAAA,MA4BG,EAAKoD,QAAQrB,IA5BhB,uC,KAmCPqB,QAAU,SAAOrB,GAAP,yBAAA/B,EAAAC,OAAA,mDAEA8D,EAAMvB,aAAaC,QAAQ,iBAF3B,sBAII,IAAI9E,MAAM,qBAJd,UAOD,EAAKqD,QAAW,EAAKA,OAAOwC,UAP3B,kCAAAxD,EAAA,MAQI,EAAK8B,cAAcC,IARvB,yBAAA/B,EAAA,MAW0B,EAAKiB,QAASwC,kBAAkBtF,EAAgCC,OAX1F,UAWN,EAAK+C,mBAXC,QAaF4C,GAAe,KAARA,GAA6B,KAAfA,EAAIvD,OAbvB,oCAAAR,EAAA,MAcI,EAAKmB,mBAAmBR,WAAWhC,EAAYoF,KAdnD,2BAAA/D,EAAA,MAkCcF,EAA8B,EAAKqB,qBAlCjD,eAkCAvC,EAlCA,mBAAAoB,EAAA,MAmCA,EAAKa,SAAUgD,EAAWjF,KAnC1B,2BAAAoB,EAAA,MA4C4B,EAAKiB,QAASwC,kBAAkBtF,EAA4BC,OA5CxF,eA4CN,EAAKoD,qBA5CC,OA6CN,EAAKA,qBAAqBkC,iBAAiB,8BAA8B,SAAOC,GAAP,SAAA3D,EAAAC,OAAA,oDACjE,EAAKa,WAAYkD,IAAIC,SAD4C,iDAKrE,EAAKxC,MAAMyC,SAAQ,0BAAAlE,EAAAC,OAAA,kEAAAD,EAAA,MACWG,EAA8B,EAAKqB,uBAD9C,WACT2C,EADS,UAEK,EAAKrD,WAAYkD,IAAII,OAF1B,kCAAApE,EAAA,MAGL,EAAKa,SAAUwD,GAAUF,KAHpB,wCALkD,wCAYzE,EAAK3C,qBAAqBsC,qBAzDpB,YAAA9D,EAAA,MA0DoBG,EAA8B,EAAKqB,uBA1DvD,eA0DA2C,EA1DA,mBAAAnE,EAAA,MA2DA,EAAKa,SAAUwD,GAAUF,KA3DzB,2BAAAnE,EAAA,MA6DoC,EAAKiB,QAASwC,kBAAkBtF,EAAoCC,OA7DxG,eA6DN,EAAKiD,6BA7DC,OA8DN,EAAKA,6BAA6BqC,iBAAiB,8BAA8B,SAAOC,GAAP,SAAA3D,EAAAC,OAAA,oDACzE,EAAKa,WAAYkD,IAAIC,SADoD,iDAK7E,EAAKxC,MAAMyC,SAAQ,0BAAAlE,EAAAC,OAAA,kEAAAD,EAAA,MACYG,EAA8B,EAAKkB,+BAD/C,WACTiD,EADS,UAEM,EAAKxD,WAAYkD,IAAIO,QAF3B,kCAAAvE,EAAA,MAGL,EAAKa,SAAU2D,GAAkBF,KAH5B,wCAL0D,wCAYjF,EAAKjD,6BAA6ByC,qBA1E5B,YAAA9D,EAAA,MA2EqBG,EAA8B,EAAKkB,+BA3ExD,eA2EAiD,EA3EA,mBAAAtE,EAAA,MA4EA,EAAKa,SAAU2D,GAAkBF,KA5EjC,2BAAAtE,EAAA,MA8EiC,EAAKiB,QAASwC,kBAAkBtF,EAAkCC,OA9EnG,eA8EN,EAAKkD,0BA9EC,OA+EN,EAAKA,0BAA0BoC,iBAAiB,8BAA8B,SAAOC,GAAP,SAAA3D,EAAAC,OAAA,oDACtE,EAAKa,WAAYkD,IAAIC,SADiD,iDAI1E,EAAKxC,MAAMyC,SAAQ,4BAAAlE,EAAAC,OAAA,kEAAAD,EAAA,MACgBI,EAAiB,EAAKkB,4BADtC,UACTmD,EADS,OAETC,EAAe,EAAK5D,WAAYkD,IAAIW,eAErCF,EAAiBjE,SAAWkE,EAAalE,QACtCiE,EAAiBG,QAAO,SAAChG,EAAOiG,GAAR,OAAkBjG,IAAU8F,EAAaG,MAAQrE,OAAS,GAL3E,kCAAAR,EAAA,MAOL,EAAKa,SAAUiE,GAAgBL,KAP1B,wCAJuD,wCAe9E,EAAKnD,0BAA0BwC,qBA9FzB,YAAA9D,EAAA,MA+FyBI,EAAiB,EAAKkB,4BA/F/C,WAgG0B,KAD1BmD,EA/FA,QAgGejE,OAhGf,oCAAAR,EAAA,MAiGI,EAAKa,SAAUiE,GAAgBL,KAjGnC,2BAAAzE,EAAA,MAuGsB,EAAKgB,OAAQsC,kBAAkBnF,IAvGrD,eAuGN,EAAK+C,eAvGC,mBAAAlB,EAAA,MAwG6B,EAAKkB,eAAeuC,kBAAkBtF,IAxGnE,eAwGN,EAAKiD,sBAxGC,mBAAApB,EAAA,MAyGqBG,EAA8B,EAAKiB,wBAzGxD,eAyGA2D,EAzGA,mBAAA/E,EAAA,MA0GA,EAAKa,SAAUmE,GAAgBD,KA1G/B,uC,KA6GVE,WAAa,oBAAAjF,EAAAC,OAAA,oDACL,EAAKe,OADA,qBAED,EAAKG,mBAFJ,kCAAAnB,EAAA,MAGK,IAAIzC,SAAQ,SAAAC,GACd,EAAK2D,mBAAoB+D,oBAAoB,8BAA8B,WACvE1H,WALP,WASD,EAAK6D,6BATJ,kCAAArB,EAAA,MAUK,IAAIzC,SAAQ,SAAAC,GACd,EAAK6D,6BAA8B6D,oBAAoB,8BAA8B,WACjF1H,WAZP,WAgBD,EAAKwD,OAAOwC,UAhBX,oCAAAxD,EAAA,MAiBK,EAAKgB,OAAOiE,cAjBjB,eAoBD,EAAKjE,OApBJ,uC,KAuBbmE,qBAAuB,SAAOZ,GAAP,iBAAAvE,EAAAC,OAAA,mDACd,EAAKoB,6BADS,wDAKb7B,EAAI+E,EAAQ5E,SAAS,IAAIE,SAAS,EAAG,KACrCuF,EAAWzG,EAAYa,GANV,kBASZ,IAAIjC,SAAQ,SAAAC,GACf,EAAKiE,MAAMyC,SAAQ,oBAAAlE,EAAAC,OAAA,kEAAAD,EAAA,MACT,EAAKqB,6BAA8BV,WAAWyE,IADrC,OAEf5H,IAFe,4CAVJ,sC,KAwBvB6H,kBAAoB,SAAOzG,EAAiB2F,GAAxB,SAAAvE,EAAAC,OAAA,mDACX,EAAKqB,0BADM,sDAKZ1C,EAAM4B,OAAS,GALH,sBAMN,IAAI7C,MAAM,8CANJ,UAS0B,IAAtCiB,EAAMgG,QAAO,SAAAU,GAAC,OAAU,IAANA,KAAS9E,OATf,sBAUN,IAAI7C,MAAM,+CAVJ,gCAaT,IAAIJ,SAAQ,SAAAC,GACf,EAAKiE,MAAMyC,SAAQ,oBAAAlE,EAAAC,OAAA,kEAAAD,EAAA,MACTO,EAAkB,EAAKe,0BAA4B1C,IAD1C,OAEfpB,IAFe,4CAdP,sC,KAgCpB+H,KAAO,8BAAAvF,EAAAC,OAAA,mDACE,EAAKuB,qBADP,wDAMG4C,EAAuC,EAA9B,EAAKtD,WAAYkD,IAAII,OAC9BvF,EAAS,IAAIC,YAAY,IACzBC,EAAK,IAAIC,SAASH,IACrBK,SAAS,EAAGkF,GATZ,kBAUI,IAAI7G,SAAQ,SAAAC,GACf,EAAKiE,MAAMyC,SAAQ,oBAAAlE,EAAAC,OAAA,kEAAAD,EAAA,MACT,EAAKwB,qBAAsBb,WAAW5B,IAD7B,OAEfvB,IAFe,4CAXpB,sC,KAmBPgI,OAAS,8BAAAxF,EAAAC,OAAA,mDACA,EAAKuB,qBADL,wDAMK4C,EAAuC,IAA9B,EAAKtD,WAAYkD,IAAII,OAC9BvF,EAAS,IAAIC,YAAY,IACzBC,EAAK,IAAIC,SAASH,IACrBK,SAAS,EAAGkF,GATd,kBAUM,IAAI7G,SAAQ,SAAAC,GACf,EAAKiE,MAAMyC,SAAQ,oBAAAlE,EAAAC,OAAA,kEAAAD,EAAA,MACT,EAAKwB,qBAAsBb,WAAW5B,IAD7B,OAEfvB,IAFe,4CAXtB,sC,KAmBTiI,mBAAqB,oBAAAzF,EAAAC,OAAA,kEAAAD,EAAA,MAEX,EAAKwB,qBAAsBoC,qBAFhB,yBAAA5D,EAAA,MAGX,EAAKqB,6BAA8BuC,qBAHxB,yBAAA5D,EAAA,MAIX,EAAKsB,0BAA2BsC,qBAJrB,sC,KAOrBE,mBAAqB,oBAAA9D,EAAAC,OAAA,kEAAAD,EAAA,MAEX,EAAKwB,qBAAsBsC,sBAFhB,yBAAA9D,EAAA,MAGX,EAAKqB,6BAA8ByC,sBAHxB,yBAAA9D,EAAA,MAIX,EAAKsB,0BAA2BwC,sBAJrB,uCCxVnB4B,EAA0B,CAC9BC,YAAY,EACZnC,WAAW,EACXS,UAAU,EACV2B,gBAAiB,EACjBC,QAAQ,EACRC,QAAStD,aAAaC,QAAQ,kBAAoB,GAClD2B,OAAQ,EACR2B,QAAS,EACTxB,QAAS,EACTI,aAAc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAQpCvB,EAAU,eAACrB,EAAD,+DAA2C,SAAOlB,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,2EAAAD,EAAA,MAEjDgG,EAAS5C,QAAQrB,IAFgC,yBAAA/B,EAAA,MAGjDa,EAASoF,MAHwC,2IAUrD1C,EAAO,SAACxB,GAAD,OAAmC,SAAOlB,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,2EAAAD,EAAA,MAEtCgG,EAASzC,KAAKxB,IAFwB,yBAAA/B,EAAA,MAGtCa,EAASoF,MAH6B,2IAS1Cd,EAAuB,SAACZ,GAAD,OAA+B,SAAO1D,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,6DAEpDa,IAAWkD,IAAI6B,OAFqC,mEAAA7F,EAAA,MAKlDa,EAAS4E,MALyC,yBAAAzF,EAAA,MAMlDa,EAASqF,OANyC,yBAAAlG,EAAA,MAOlDa,EAASsF,GAAuB5B,KAPkB,0BAAAvE,EAAA,MAQlDgG,EAASb,qBAAqBZ,IARoB,qCAAAvE,EAAA,MAUlDa,EAASiD,MAVyC,eAWxDT,YAAW,oBAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACHa,EAASuF,OADN,uCAER,KAbqD,4EAiBtDf,EAAoB,SAAChF,EAAkBkE,GAAnB,OAAiD,SAAO1D,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,6DAEnEa,IAAWkD,IAAI6B,OAFoD,mEAAA7F,EAAA,MAKjEa,EAAS4E,MALwD,yBAAAzF,EAAA,MAMjEa,EAASwF,OANwD,yBAAArG,EAAA,MAOjEgG,EAASX,kBAAkBhF,EAAQkE,IAP8B,0BAAAvE,EAAA,MAQjEa,EAASiE,GAAgBzE,KARwC,qCAAAL,EAAA,MAUjEa,EAASiD,MAVwD,eAWvET,YAAW,oBAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACHa,EAASyF,OADN,uCAER,KAboE,4EA+CrExC,EAAqB,kBAAgB,SAAOjD,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,kEAAAD,EAAA,MACnCgG,EAASlC,sBAD0B,uCAIrC2B,EAAqB,kBAAgB,SAAO5E,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,kEAAAD,EAAA,MACnCgG,EAASP,sBAD0B,uCAIrCc,EAAWC,YAAY,CAC3B9D,KAAM,MACNgD,eACAe,SAAU,CACRJ,YAAc,SAACK,EAAkBC,GAAnB,sBACTD,EADS,CAEZzC,UAAU,KAEZqC,eAAiB,SAACI,EAAkBC,GAAnB,sBACZD,EADY,CAEfzC,UAAU,KAEZiC,mBAAqB,SAACQ,EAAkBC,GAAnB,sBAChBD,EADgB,CAEnBzC,UAAU,KAEZmC,sBAAwB,SAACM,EAAkBC,GAAnB,sBACnBD,EADmB,CAEtBzC,UAAU,KAEZd,aAAc,SAACuD,EAAkBC,GAAnB,sBACTD,EADS,CAEZf,YAAY,EACZnC,WAAW,EACXoD,WAAOC,EACPjB,gBAAiBc,EAAMd,gBAAgB,KAEzCK,eAAgB,SAACS,EAAkBC,GAAnB,sBACXD,EADW,CAEdf,YAAY,EACZnC,WAAW,EACXoD,WAAOC,KAET3D,cAAe,SAACwD,EAAkBC,GAAnB,sBACVD,EADU,CAEbf,YAAY,EACZnC,WAAW,EACXoD,MAAOD,EAAOG,WAEhBC,aAAc,SAACL,EAAkBC,GAAnB,sBACTD,EADS,CAEZf,YAAY,EACZnC,WAAW,EACXoD,WAAOC,EACPjB,gBAAiB,KAEnB/B,WAAY,SAAC6C,EAAkBC,GAAnB,sBACPD,EADO,CAEVZ,QAASa,EAAOG,WAElBzC,UAAW,SAACqC,EAAkBC,GAAnB,sBACND,EADM,CAETtC,OAAQuC,EAAOG,QACfjB,OAAmC,KAAT,EAAjBc,EAAOG,YAElB9B,gBAAiB,SAAC0B,EAAkBC,GAAnB,sBACZD,EADY,CAEfX,QAASY,EAAOG,WAElBX,uBAAwB,SAACO,EAAkBC,GACzC,OAAO,eACFD,EADL,CAEEnC,QAASoC,EAAOG,WAGpBtC,kBAAmB,SAACkC,EAAkBC,GACpC,OAAID,EAAMzC,SACDyC,EAEA,eACFA,EADL,CAEEnC,QAASoC,EAAOG,WAItBhC,gBAAiB,SAAC4B,EAAkBC,GAAnB,sBACZD,EADY,CAEf/B,aAAcgC,EAAOG,WAEvBE,WAAY,SAACN,EAAkBC,GAAnB,sBACPD,EADO,CAEVE,WAAOC,KAETI,YAAa,SAACP,EAAkBC,GAAnB,sBACRD,EADQ,CAEXzC,UAAU,EACViD,SAAS,KAEXC,cAAe,SAACT,EAAkBC,GAAnB,sBACVD,EADU,CAEbzC,UAAU,EACViD,SAAS,KAEXE,aAAc,SAACV,EAAkBC,GAAnB,sBACTD,EADS,CAEZzC,UAAU,EACViD,SAAS,EACTrB,QAAQ,KAEVwB,eAAgB,SAACX,EAAkBC,GAAnB,sBACXD,EADW,CAEdzC,UAAU,EACViD,SAAS,EACTrB,QAAQ,Q,EA8BVU,EAASe,QAjBXnE,E,EAAAA,aAAc8C,E,EAAAA,eAAgB/C,E,EAAAA,cAC9B6D,E,EAAAA,aACAlD,E,EAAAA,WACAQ,G,EAAAA,UACAW,G,EAAAA,gBACAR,G,EAAAA,kBACA2B,G,EAAAA,uBACArB,G,EAAAA,gBAEAuB,I,EADAW,W,EACAX,aACAC,G,EAAAA,eACAJ,G,EAAAA,mBACAE,G,EAAAA,sBACAa,G,EAAAA,YACAE,G,EAAAA,cACAC,G,EAAAA,aACAC,G,EAAAA,eAEad,KAAf,Q,UC9NMgB,GAAc,CAAC,MAAO,SAAU,OAAQ,KAAM,KAAM,gBAEpDC,GAAUC,EAAQ,KAAyBD,QAoOlCE,GA7N8B,SAACC,GAC5C,IAAMhD,EAAeiD,aAAY,SAAClB,GAAD,OAAsBA,EAAM1C,IAAIW,gBAC3DJ,EAAUqD,aAAY,SAAClB,GAAD,OAAsBA,EAAM1C,IAAIO,WACtDN,EAAW2D,aAAY,SAAClB,GAAD,OAAsBA,EAAM1C,IAAIC,YACvD8B,EAAU6B,aAAY,SAAClB,GAAD,OAAsBA,EAAM1C,IAAI+B,WACtDF,EAAS+B,aAAY,SAAClB,GAAD,OAAiD,KAAP,EAAnBA,EAAM1C,IAAII,WAEtDvD,EAAWgH,cAPsD,EAS3BC,oBAAU,GATiB,mBAShEC,EATgE,KAShDvD,EATgD,OAU3BsD,oBAAS,GAVkB,mBAUhEE,EAVgE,KAUhDC,EAVgD,KAajEC,EAASC,sBACTC,EAAcC,iBAAO,GAErBC,EAA4BC,uBAAY,SAAC3J,GAC7C,IAAM4J,EAAO,sBACR7D,EAAa8D,MAAM,EAAGlE,EAAU,IADxB,CAEX3F,GAFW,YAGR+F,EAAa8D,MAAMlE,KAExB1D,EAASwE,EAAkBmD,EAASjE,MACnC,CAACI,EAAcJ,EAAS1D,IAG3B6H,qBAAU,WACR,GAAIR,GAAUA,EAAOS,SAAYpE,EAAU,EACzC,IACQ2D,EAAOS,SACTT,EAAOS,QAAQC,iBAAiBnL,MAAK,SAACoH,GACpCgE,QAAQC,IAAR,kBAAuBjE,IAClBN,IAAaM,EAAQ,GAAQN,EAAU,GAAM2D,EAAOS,SACvDT,EAAOS,QAAQI,QAAQxE,EAAU,MAIzC,aAIH,CAACA,IAoEJ,OACE,kBAAC,IAAD,CAASyE,UAAU,aACjB,kBAAC,IAAD,CAAUC,MAAM,iBAAiBzB,IACjC,kBAAC,IAAD,CAAWwB,UAAU,oBACnB,kBAAC,IAAD,CAAYA,UAAU,4BACpB,yBAAKE,KAAK,QAAQF,UAAU,yCApC3B,yBAAKG,MAAO,GAAIC,OAAQ,GAAIJ,UAAU,UAAUjF,IAAG,2BAAsBgC,IAC9E,0BAAMoD,MAAO,GAAIC,OAAQ,GACvBC,OAAO,OAAOC,YAAa,EAC3BC,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,GAAI,EACvBV,UAAU,sBACZ,0BACEI,OAAQ,GACRD,MAAOQ,KAAKC,MAAM7D,EAAU,IAAM,IAClCwD,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGC,GAAI,EACvBV,UAAU,kBACZ,0BAAMG,MAAO,EAAGC,OAAQ,EAAGG,EAAG,GAAIC,EAAG,EAAGR,UAAU,qBA6B9C,kBAAC,IAAD,CAAQA,UAAU,gCAAgCa,IAAKC,MACvD,kBAAC,IAAD,CAASZ,KAAK,UAGlB,kBAAC,IAAD,CAAYF,UAAU,qBACpB,kBAAC,IAAD,CAASA,UAAU,yBAAyBe,MAAM,QAIhD,kBAAC,IAAD,CAASf,UAAU,+BACjB,kBAAC,IAAD,CAAWgB,QAAS,CAClBC,gBAAiBhG,EACjBiG,gBAAiBjG,EACjBkG,aAAc5F,EAAU,EAAIA,EAAQ,EAAI,GACvC6F,OAAO,EAAMC,IAAKnC,EAAQoC,oBAxFlB,SAAO3G,GAAP,eAAA3D,EAAAC,OAAA,mDACdiI,EAAOS,QADO,oDAKfZ,IAAmBxD,EALJ,mCAAAvE,EAAA,MAMGkI,EAAOS,QAAQC,kBANlB,OAMX/D,EANW,OAOnBgE,QAAQC,IAAR,kBAAuBjE,IACnBA,IAAWN,EAAU,IACrB1D,EAASsE,EAAqBN,EAAM,IACpCL,EAAkBK,EAAM,IAVT,wBAYRkD,IAAmBxD,GAC5BC,EAAkBD,GAbD,wCAyFRI,EAAazH,KAAI,SAACqN,EAAa1F,GAC9B,OAAO,kBAAC,IAAD,CAAUd,IAAKc,EAAO2F,MAAO3F,EAAMlF,YACxC,yBAAKqJ,UAAU,wBACb,yBAAKA,UAAU,4BAA4ByB,QAAS,kBAAMxC,GAAkB,KACzEsC,EAAYG,QAAQ,GADvB,UAIF,yBAAK1B,UAAU,uBACb,yBAAKA,UAAU,4BACZzB,GAAY1C,WAOzB,kBAAC,IAAD,CAASmE,UAAU,gCAAgC2B,OAAoB,IAAZpG,GAA6B,IAAZA,GAC1E,kBAAC,IAAD,CAAUqG,IAAK,IAAKC,IAAK,IAAKC,KAAM,EAAGlM,MAAO2F,EAAU,GAAKA,GAAW,GAA6B,IAAxBI,EAAanE,OAAemE,EAAaJ,EAAU,GAAK,EAAGwG,OAAO,EAAMC,MAAM,SAASC,YAzF3J,SAACtH,GAClB,IAAM/E,EAAQ+E,EAAGuH,OAAOtM,MAClB4J,EAAO,sBACR7D,EAAa8D,MAAM,EAAGlE,EAAU,IADxB,CAEX3F,GAFW,YAGR+F,EAAa8D,MAAMlE,KAExB1D,EAASiE,GAAgB0D,IACzBnF,YAAW,WACL+E,EAAYO,UAAY/J,GAC1BiC,EAASwE,EAAkBmD,EAASjE,MAErC,KACH6D,EAAYO,QAAU/J,IA6EZ,kBAAC,IAAD,CAASsK,KAAK,QAAQiC,KAAK,QAAQH,MAAM,SAASI,KAAMC,OACxD,kBAAC,IAAD,CAASnC,KAAK,MAAM8B,MAAM,SAASI,KAAMC,SAG7C,kBAAC,IAAD,CAASrC,UAAU,gCAAgC2B,OAAoB,IAAZpG,GAA6B,IAAZA,GAA5E,UAKJ,kBAAC,IAAD,CACE+G,OAAQtD,EACRuD,aAAc,kBAAMtD,GAAkB,IACtCuD,OAAQ,kBACRC,OAAQ,CACN,CACE/I,KAAM,cACNhE,KAAM,SACNL,MAAO,cACPqN,YAAa,cACb9M,MAAO2F,GAAW,GAAKA,GAAW,EAAII,EAAaJ,EAAU,GAAK,EAClEqG,IAAK,IACLC,IAAK,MAGTc,QAAS,CACP,CACEC,KAAM,SACNC,KAAM,SACNC,SAAU,YACVC,QAAS,WACPlD,QAAQC,IAAI,oBAGhB,CACE8C,KAAM,KACNG,QAAS,SAAC1L,GACR,IAAMzB,EAAQO,SAASkB,EAAOkK,aAC1B3L,GAAS,KAAOA,GAAS,KAC3B0J,EAA0B1J,QAMpC,kBAAC,IAAD,CACE0M,OAAQ3D,EAAMqE,kBACdT,aAAc,kBAAM5D,EAAMsE,6BAC1BT,OAAQ3F,EAAS,UAAY,QAC7BqG,QAAO,4BAAuBrG,EAAS,SAAW,OAA3C,8BACP8F,QAAS,CACP,CACEC,KAAM,SACNC,KAAM,SACNC,SAAU,aAEZ,CACEF,KAAM,KACNG,QAAS,SAAC1L,GAENQ,EADEgF,EDxJa,SAAOhF,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,2EAAAD,EAAA,MAErBa,EAAS4E,MAFY,yBAAAzF,EAAA,MAGrBa,EAASsG,OAHY,yBAAAnH,EAAA,MAIrBgG,EAASR,UAJY,yBAAAxF,EAAA,MAKrBa,EAASwD,GAAkC,IAAxBvD,IAAWkD,IAAII,UALb,mCAAApE,EAAA,MAOrBa,EAASwG,OAPY,2BAAArH,EAAA,MAQrBa,EAASiD,MARY,eAS3BT,YAAW,oBAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACHa,EAASyF,OADN,uCAER,KAXwB,yEAfF,SAAOzF,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,2EAAAD,EAAA,MAEnBa,EAAS4E,MAFU,yBAAAzF,EAAA,MAGnBa,EAASoG,OAHU,yBAAAjH,EAAA,MAInBgG,EAAST,QAJU,yBAAAvF,EAAA,MAKnBa,EAASwD,GAAkC,EAAxBvD,IAAWkD,IAAII,UALf,mCAAApE,EAAA,MAOnBa,EAASuG,OAPU,2BAAApH,EAAA,MAQnBa,EAASiD,MARU,eASzBT,YAAW,oBAAArD,EAAAC,OAAA,kEAAAD,EAAA,MACHa,EAASyF,OADN,uCAER,KAXsB,iFEpDvBkB,I,OAAUC,EAAQ,KAAyBD,SAmHlC2E,GAjHgC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACxBtE,oBAAS,GADe,mBACvDuE,EADuD,KAC1CC,EAD0C,KAExDvK,EAAasG,kBAAO,GAFoC,EAGlCP,oBAAS,GAHyB,mBAGvDyE,EAHuD,KAG/CC,EAH+C,OAIlB1E,mBAAS,eAJS,mBAIvD2E,EAJuD,KAIvCC,EAJuC,KAMxDhG,EAAQkB,aAAY,SAAClB,GAAD,MAAuB,CAC/ClD,UAAWkD,EAAM1C,IAAIR,UACrBoD,MAAOF,EAAM1C,IAAI4C,MACjBhB,gBAAiBc,EAAM1C,IAAI4B,gBAC3BD,WAAYe,EAAM1C,IAAI2B,WACtBgH,OAA8B,KAAtBjG,EAAM1C,IAAI8B,YAGdjF,EAAWgH,cAEX+E,EAAU,oBAAA5M,EAAAC,OAAA,gDACduM,GAAU,GACV3L,EAAS0C,EAAKxB,EAAW4G,UAFX,sCAKVkE,EAAatE,uBAAY,oBAAAvI,EAAAC,OAAA,gDAC7BY,EAASuC,EAAQrB,EAAW4G,UADC,uCAE5B,CAAC9H,IAEJ6H,qBAAU,aACHhC,EAAMd,gBAAmB,IAAMc,EAAMf,YAAee,EAAMlD,WAAc+I,EAOzE7F,EAAMlD,YAAckD,EAAMf,YAC5ByG,EAAQ9L,KAAK,cAPb,IAAI/C,SAAQ,SAAAC,GAAO,OAAI6F,YAAW,kBAAM7F,MAAW,QAAOC,MAAK,WAC7DoP,SASH,CAACnG,EAAMd,gBAAiB2G,EAAQ7F,EAAMlD,UAAWkD,EAAMf,WAAYyG,EAASS,IAE/EnE,qBAAU,WACR,IAAMoE,EAAcpG,EAAMd,gBAAkB,EAAxB,6BAAkDc,EAAMd,gBAAxD,SAAiF,iBACrG,GAAIkH,IAAeL,EAAgB,CACjCC,EAAkBI,GAClB,IAAMC,EAAOC,SAASC,cAAc,2CAChCF,IACFA,EAAKG,UAAYJ,MAGpB,CAACL,EAAgB/F,EAAME,MAAOF,EAAMd,kBAUvC,OACE,kBAAC,IAAD,CAASoD,UAAU,WACjB,kBAAC,IAAD,CAAUC,MAAM,iBAAiBzB,IACjC,kBAAC,IAAD,CAAWwB,UAAU,kBACnB,kBAAC,IAAD,CAAYA,UAAU,0BACpB,kBAAC,IAAD,CAAQA,UAAU,8BAA8Ba,IAAKC,QAGzD,kBAAC,IAAD,CAAYd,UAAU,mBACpB,kBAAC,IAAD,CAASe,MAAM,OAAOf,UAAU,wBAI9B,kBAAC,IAAD,CAASC,MAAM,gCACf,kBAAC,IAAD,CAASD,UAAU,8BAA8B2B,YAAyB9D,IAAhBH,EAAME,OAAwBF,EAAMiG,QAAUjG,EAAMf,YAAce,EAAMlD,WAChI,kBAAC,IAAD,CAAWiH,QAASmC,EAASzB,KAAK,SAAlC,SAEF,kBAAC,IAAD,CAASnC,UAAU,8BAA8B2B,YAAyB9D,IAAhBH,EAAME,OAAwBF,EAAMf,YAAce,EAAMlD,YAAckD,EAAMiG,QACpI,kBAAC,IAAD,CAAWlC,QAAS4B,EAAcO,EAAUC,EAAY1B,KAAK,SAC1DkB,EAAc,OAAS,YAG5B,kBAAC,IAAD,CAASrD,UAAU,+BAA+B2B,YAAyB9D,IAAhBH,EAAME,OAAwBF,EAAMf,YAAce,EAAMlD,YAAckD,EAAMiG,QACrI,kBAAC,IAAD,CACEQ,eAAgBd,EAChBpB,YAjCc,SAAChI,GACzBqJ,EAAerJ,EAAMiI,OAAOkC,UAiClBlE,KAAK,UAEP,kBAAC,IAAD,4BAEF,kBAAC,IAAD,CAASF,UAAU,+BAA+B2B,YAAyB9D,IAAhBH,EAAME,OAAwBF,EAAMf,YAAce,EAAMlD,YAAckD,EAAMiG,QACrI,kBAAC,IAAD,CACEQ,eAAgBpL,EAAW4G,QAC3BsC,YArCa,SAAChI,GACxBlB,EAAW4G,QAAU1F,EAAMiI,OAAOkC,SAqCxBlE,KAAK,UAEP,kBAAC,IAAD,2BAEF,kBAAC,IAAD,CAASD,MAAM,kCAGnB,kBAAC,IAAD,CACEqC,YAAyBzE,IAAhBH,EAAME,OAAwBF,EAAMf,WAC7CuG,QAASO,EACTY,iBAAiB,EAEjB9B,aAAc,WACZiB,GAAU,GACV3L,GFlHyB,SAAOA,EAAUC,GAAjB,SAAAd,EAAAC,OAAA,kEAAAD,EAAA,MAC3BgG,EAASf,cADkB,yBAAAjF,EAAA,MAE3Ba,EAASkG,MAFkB,6CGwFpBuG,GApEO,WACpB,IAAM9J,EAAYoE,aAAY,SAAClB,GAAD,OAAsBA,EAAM1C,IAAIR,aACxDqC,EAAS+B,aAAY,SAAClB,GAAD,OAAsBA,EAAM1C,IAAI6B,UAFjC,EAGwBiC,oBAAS,GAHjC,mBAGnBkE,EAHmB,KAGAuB,EAHA,KAKpBC,EAAa,oBAAAxN,EAAAC,OAAA,kEAAAD,EAAA,MACXgG,EAASf,cADE,sCAInByD,qBAAU,WAGR,OAFA+E,OAAO/J,iBAAiB,eAAgB8J,GAEjC,WACLC,OAAOvI,oBAAoB,eAAgBsI,MAE5C,IAEH9E,qBAAU,cAEP,CAAC7C,IAEJ,IAAM6H,EAAkB,kBAAM,kBAAC,IAAD,CAAUC,GAAG,cAWrCC,EAAqB,SAAO3K,GAAP,SAAAjD,EAAAC,OAAA,gDACzBsN,GAAqB,GADI,sCAI3B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,KAAK,WAAWC,UAAW3B,GAAS4B,OAAO,IAClD,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAYtK,EApBpB,kBACzB,kBAAC,GAAD,CACEwI,kBAAmBA,EACnBC,0BAA2B,WACzBsB,GAAqB,OAgBgCG,EAAsCK,OAAO,IAC9F,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWJ,EAAiBK,OAAO,KAErD,kBAAC,IAAD,CAAW7E,KAAK,UACd,kBAAC,IAAD,CAAc8E,IAAI,YAAYC,KAAK,aAAatD,QAASnH,GACvD,kBAAC,IAAD,CAAS4H,KAAM8C,MACf,kBAAC,IAAD,qBAGArI,EACE,kBAAC,IAAD,CAAcmI,IAAI,OAAOrD,QAASnH,EAAWiH,QAASmD,GACpD,kBAAC,IAAD,CAASxC,KAAM7F,MACf,kBAAC,IAAD,KAAW,WAEb,kBAAC,IAAD,CAAcyI,IAAI,OAAOrD,QAASnH,EAAWiH,QAASmD,GACpD,kBAAC,IAAD,CAASxC,KAAM5F,MACf,kBAAC,IAAD,KAAW,cCpFvB2I,GAAcC,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAeC,GACtCzM,UAAU0M,cACPC,SAASH,GACThR,MAAK,SAAAoR,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrI,QACfzE,UAAU0M,cAAcO,YAI1BrG,QAAQC,IACN,iHAKE4F,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBhG,QAAQC,IAAI,sCAGR4F,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BQ,OAAM,SAAAzI,GACLiC,QAAQjC,MAAM,4CAA6CA,M,aCrGpD0I,GAAcC,2BAAgB,CACvCvL,IAAKwL,KCCIC,GAAQC,YAAe,CAChCC,QAASL,GACTM,WAAW,YAAKC,iBAGpB7J,EAASnE,WAAW4N,GAAM5O,SAAU4O,GAAM3O,UCH1CgP,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,IACb,kBAAC,GAAD,OAEJzC,SAASgD,eAAe,SHgBrB,SAAkBtB,GACvB,GAA6C,kBAAmBzM,UAAW,CAMzE,GAJkB,IAAIgO,IACnBC,kCACDzC,OAAOY,SAASJ,MAEJkC,SAAW1C,OAAOY,SAAS8B,OAIvC,OAGF1C,OAAO/J,iBAAiB,QAAQ,WAC9B,IAAM+K,EAAK,UAAMyB,kCAAN,sBAEP/B,KAgEV,SAAiCM,EAAeC,GAE9C0B,MAAM3B,GACHhR,MAAK,SAAA4S,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASjM,QACO,MAAfkM,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxO,UAAU0M,cAAc+B,MAAMjT,MAAK,SAAAoR,GACjCA,EAAa8B,aAAalT,MAAK,WAC7BgQ,OAAOY,SAASuC,eAKpBpC,GAAgBC,EAAOC,MAG1BW,OAAM,WACLxG,QAAQC,IACN,oEArFA+H,CAAwBpC,EAAOC,GAI/BzM,UAAU0M,cAAc+B,MAAMjT,MAAK,WACjCoL,QAAQC,IACN,iHAMJ0F,GAAgBC,EAAOC,OGzC/BC,I,mBCjBA1Q,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.aadc73c1.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet-controller_8.entry.js\": [\n\t\t408,\n\t\t43\n\t],\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t409,\n\t\t44\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t410,\n\t\t45\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t411,\n\t\t24\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t412,\n\t\t25\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t413,\n\t\t11\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t414,\n\t\t12\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t415,\n\t\t46\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t416,\n\t\t47\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t417,\n\t\t48\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t418,\n\t\t49\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t419,\n\t\t81\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t420,\n\t\t82\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t421,\n\t\t50\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t422,\n\t\t51\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t423,\n\t\t52\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t424,\n\t\t53\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t425,\n\t\t54\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t426,\n\t\t55\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t427,\n\t\t56\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t428,\n\t\t57\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t429,\n\t\t83\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t430,\n\t\t20\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t431,\n\t\t21\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t432,\n\t\t58\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t433,\n\t\t59\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t434,\n\t\t84\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t435,\n\t\t39\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t436,\n\t\t40\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t437,\n\t\t60\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t438,\n\t\t61\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t439,\n\t\t62\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t440,\n\t\t63\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t441,\n\t\t64\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t442,\n\t\t65\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t443,\n\t\t26\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t444,\n\t\t27\n\t],\n\t\"./ion-menu_4-ios.entry.js\": [\n\t\t445,\n\t\t18\n\t],\n\t\"./ion-menu_4-md.entry.js\": [\n\t\t446,\n\t\t19\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t447,\n\t\t14\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t448,\n\t\t15\n\t],\n\t\"./ion-nav_5.entry.js\": [\n\t\t449,\n\t\t13\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t450,\n\t\t16\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t451,\n\t\t17\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t452,\n\t\t66\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t453,\n\t\t67\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t454,\n\t\t32\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t455,\n\t\t33\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t456,\n\t\t68\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t457,\n\t\t69\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t458,\n\t\t41\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t459,\n\t\t42\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t460,\n\t\t37\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t461,\n\t\t38\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t462,\n\t\t85\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t463,\n\t\t70\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t464,\n\t\t28\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t465,\n\t\t29\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t466,\n\t\t71\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t467,\n\t\t72\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t468,\n\t\t34\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t469,\n\t\t35\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t470,\n\t\t86\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t471,\n\t\t87\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t472,\n\t\t73\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t473,\n\t\t88\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t474,\n\t\t89\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t475,\n\t\t74\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t476,\n\t\t75\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t477,\n\t\t36\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t478,\n\t\t76\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t479,\n\t\t77\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t480,\n\t\t78\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t481,\n\t\t30\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t482,\n\t\t31\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t483,\n\t\t22\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t484,\n\t\t23\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t485,\n\t\t90\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 240;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t489,\n\t\t98\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 241;\nmodule.exports = webpackAsyncContext;","export const GhostCharacteristics = {\r\n    batteryServiceUuid: 'battery_service',\r\n    batteryLevelUuid: 'battery_level',\r\n    pairingUuid: '00887766-5544-3322-1100-aabbccddeeff',\r\n    deviceUuid: '11887766-5544-3322-1100-aabbccddeeff',\r\n    serviceUuid: 'ffeeddcc-bbaa-0011-2233-445566778899',\r\n    deviceName: {\r\n        uuid: 'ffeeddcc-bbaa-0011-2233-445566778801',\r\n        label: 'Device Name',\r\n        properties: {\r\n            notify: false,\r\n            read: true,\r\n            write: true,\r\n            type: 'string',\r\n        },\r\n    },\r\n    status: {\r\n        uuid: 'ffeeddcc-bbaa-0011-2233-445566778802',\r\n        label: 'Status',\r\n        properties: {\r\n            notify: true,\r\n            read: true,\r\n            write: true,\r\n            type: 'hex',\r\n        },\r\n    },\r\n    bootState: {\r\n        uuid: 'ffeeddcc-bbaa-0011-2233-445566778803',\r\n        label: 'Unknown #2',\r\n        properties: {\r\n            notify: true,\r\n            read: true,\r\n            write: false,\r\n            type: 'hex',\r\n        },\r\n    },\r\n    temperatures: {\r\n        uuid: 'ffeeddcc-bbaa-0011-2233-445566778804',\r\n        label: 'Temperatures',\r\n        properties: {\r\n            notify: true,\r\n            read: true,\r\n            write: true,\r\n            type: 'hex',\r\n        },\r\n    },\r\n    currentProfile: {\r\n        uuid: 'ffeeddcc-bbaa-0011-2233-445566778805',\r\n        label: 'Current',\r\n        properties: {\r\n            notify: true,\r\n            read: true,\r\n            write: true,\r\n            type: 'hex',\r\n        },\r\n    },\r\n    pairingKey: {\r\n        uuid: 'ffeeddcc-bbaa-0011-2233-445566778806',\r\n        label: 'Pairing Key',\r\n        properties: {\r\n            notify: true,\r\n            read: true,\r\n            write: true,\r\n            type: 'hex',\r\n        },\r\n    },\r\n}\r\n","import { GhostCharacteristics } from '../model/GhostCharacteristics';\r\nimport { Dispatch } from 'redux';\r\nimport { setAuthKey, setBatteryLevel, setCurrentProfile, connectFailed, connectStart, setTemperatures, setStatus } from '../store/reducers/bleReducer';\r\nimport { RootState } from '../store';\r\nimport { randomBytes } from 'crypto';\r\nimport { TaskQueue } from 'typescript-task-queue';\r\n\r\nclass GhostBle {\r\n    dispatch?: Dispatch;\r\n    getState?: () => RootState;\r\n    device?: BluetoothDevice;\r\n    server?: BluetoothRemoteGATTServer;\r\n    service?: BluetoothRemoteGATTService;\r\n    batteryService?: BluetoothRemoteGATTService;\r\n    authCharacteristic?: BluetoothRemoteGATTCharacteristic;\r\n    batteryCharacteristic?: BluetoothRemoteGATTCharacteristic;\r\n    currentProfileCharacteristic?: BluetoothRemoteGATTCharacteristic;\r\n    temperatureCharacteristic?: BluetoothRemoteGATTCharacteristic;\r\n    bootStateCharacteristic?: BluetoothRemoteGATTCharacteristic;\r\n    statusCharacteristic?: BluetoothRemoteGATTCharacteristic;\r\n\r\n    private queue: TaskQueue = new TaskQueue({ autorun: true, stoppable: false });\r\n\r\n    initialize = (dispatch: Dispatch, getState: () => RootState) => {\r\n        this.dispatch = dispatch;\r\n        this.getState = getState;\r\n    }\r\n\r\n    private initializeBle = async (allDevices: boolean) => {\r\n        if (!this.device || !this.device.gatt) {\r\n            if (allDevices) {\r\n                this.device = await navigator.bluetooth.requestDevice({\r\n                    optionalServices: [GhostCharacteristics.serviceUuid, GhostCharacteristics.batteryServiceUuid],\r\n                    acceptAllDevices: true,\r\n                });\r\n\r\n            } else {\r\n                const nameFilters = [];\r\n                const deviceName = localStorage.getItem('ghostmv1.name');\r\n                if (deviceName) {\r\n                    nameFilters.push({ name: deviceName });\r\n                    nameFilters.push({ name: deviceName.toLowerCase() });\r\n                    nameFilters.push({ name: deviceName.toUpperCase() });\r\n                }\r\n                this.device = await navigator.bluetooth.requestDevice({\r\n                    filters: [\r\n                        ...nameFilters,\r\n                        {\r\n                            services: [GhostCharacteristics.deviceUuid]\r\n                        }, {\r\n                            services: [GhostCharacteristics.pairingUuid]\r\n                        }\r\n                    ],\r\n                    optionalServices: [GhostCharacteristics.serviceUuid, GhostCharacteristics.batteryServiceUuid],\r\n                    // acceptAllDevices: true,\r\n                });\r\n            }\r\n\r\n            if (!this.device || !this.device.gatt) {\r\n                throw new Error(\"Failed to retrieve GhostBLE device.\");\r\n            }\r\n            if (this.device.name) {\r\n                localStorage.setItem('ghostmv1.name', this.device.name);\r\n            }\r\n\r\n            this.device.ongattserverdisconnected = async (event: Event) => {\r\n                await this.dispatch!(connectFailed(`Failed to connect to Ghost MV1.  Retrying ...`));\r\n            };\r\n        }\r\n\r\n        await this.dispatch!(connectStart());\r\n\r\n        this.server = await this.device.gatt.connect();\r\n        if (!this.server) {\r\n            throw new Error(\"Failed to retrieve BLE server.\");\r\n        }\r\n\r\n        await new Promise(resolve => setTimeout(() => resolve(), 500));\r\n        this.service = await this.server.getPrimaryService(GhostCharacteristics.serviceUuid);\r\n    }\r\n\r\n    pair = async (allDevices: boolean) => {\r\n        if (!this.server || !this.server.connected) {\r\n            await this.initializeBle(allDevices);\r\n        }\r\n\r\n        //const randomKey = hexToString(generateRandomKey());\r\n        //localStorage.setItem('ghostmv1.auth', randomKey);\r\n\r\n        this.authCharacteristic = await this.service!.getCharacteristic(GhostCharacteristics.pairingKey.uuid);\r\n        // const value = await readCharacteristicStringValue(this.authCharacteristic!);\r\n        // if (value !== this.getState!().ble.authKey) {\r\n        //     localStorage.setItem('ghostmv1.auth', value);\r\n        // }\r\n        // await this.authCharacteristic!.writeValue(stringToHex(value));\r\n\r\n        await new Promise(async resolve => {\r\n            this.authCharacteristic!.addEventListener('characteristicvaluechanged', async (ev: Event) => {\r\n                await this.authCharacteristic!.stopNotifications();\r\n                const value = await readCharacteristicStringValue(this.authCharacteristic!);\r\n                localStorage.setItem('ghostmv1.auth', value);\r\n                await this.dispatch!(setAuthKey(value));\r\n                await this.authCharacteristic!.writeValue(stringToHex(value));\r\n\r\n                resolve();\r\n            });\r\n            await this.authCharacteristic!.startNotifications();\r\n            await this.authCharacteristic!.readValue();\r\n        });\r\n        await this.connect(allDevices);\r\n\r\n//        await this.authCharacteristic.readValue();\r\n//        await p;\r\n        // await p;\r\n    }\r\n\r\n    connect = async (allDevices: boolean) => {\r\n        // authenticate\r\n        const key = localStorage.getItem('ghostmv1.auth');\r\n        if (!key) {\r\n            throw new Error(\"No paired device.\");\r\n        }\r\n\r\n        if (!this.server || !this.server.connected) {\r\n            await this.initializeBle(allDevices);\r\n        }\r\n\r\n        this.authCharacteristic = await this.service!.getCharacteristic(GhostCharacteristics.pairingKey.uuid);\r\n        //await readCharacteristicStringValue(this.authCharacteristic!);\r\n        if (key && key !== '' && key.length === 12) {\r\n            await this.authCharacteristic.writeValue(stringToHex(key));\r\n        }\r\n\r\n    //     this.bootStateCharacteristic = await this.service!.getCharacteristic(GhostCharacteristics.bootState.uuid);\r\n    // await new Promise(async resolve => {\r\n    //         this.bootStateCharacteristic!.addEventListener('characteristicvaluechanged', async (ev: Event) => {\r\n    //             const value = await readCharacteristicNumberValue(this.bootStateCharacteristic!);\r\n    //             if (value === 1) {\r\n    //                 this.bootStateCharacteristic!.stopNotifications();\r\n    //                 resolve();\r\n    //             }\r\n    //         })\r\n    //         await this.bootStateCharacteristic!.startNotifications();\r\n    //         const bootState = await readCharacteristicNumberValue(this.bootStateCharacteristic!);\r\n    //         if (bootState === 1) {\r\n    //             this.bootStateCharacteristic!.stopNotifications();\r\n    //             resolve();\r\n    //         }\r\n    //     });\r\n\r\n        const value = await readCharacteristicStringValue(this.authCharacteristic);\r\n        await this.dispatch!(setAuthKey(value));\r\n\r\n        // this.authCharacteristic.addEventListener('characteristicvaluechanged', async (ev: Event) => {\r\n        //     const value = await readCharacteristicStringValue(this.authCharacteristic!);\r\n        //     if (value !== this.getState!().ble.authKey) {\r\n        //         localStorage.setItem('ghostmv1.auth', value);\r\n        //         this.dispatch!(setAuthKey(value));\r\n        //     }\r\n        // });\r\n        this.statusCharacteristic = await this.service!.getCharacteristic(GhostCharacteristics.status.uuid);\r\n        this.statusCharacteristic.addEventListener('characteristicvaluechanged', async (ev: Event) => {\r\n            if (this.getState!().ble.updating) {\r\n                return;\r\n            }\r\n\r\n            this.queue.enqueue(async () => {\r\n                const statusValue = await readCharacteristicNumberValue(this.statusCharacteristic!);\r\n                if (statusValue !== this.getState!().ble.status) {\r\n                    await this.dispatch!(setStatus(statusValue));\r\n                }\r\n            });\r\n        });\r\n        this.statusCharacteristic.startNotifications();\r\n        const statusValue = await readCharacteristicNumberValue(this.statusCharacteristic);\r\n        await this.dispatch!(setStatus(statusValue));\r\n\r\n        this.currentProfileCharacteristic = await this.service!.getCharacteristic(GhostCharacteristics.currentProfile.uuid);\r\n        this.currentProfileCharacteristic.addEventListener('characteristicvaluechanged', async (ev: Event) => {\r\n            if (this.getState!().ble.updating) {\r\n                return;\r\n            }\r\n\r\n            this.queue.enqueue(async () => {\r\n                const profileValue = await readCharacteristicNumberValue(this.currentProfileCharacteristic!);\r\n                if (profileValue !== this.getState!().ble.profile) {\r\n                    await this.dispatch!(setCurrentProfile(profileValue));\r\n                }\r\n            });\r\n        });\r\n        this.currentProfileCharacteristic.startNotifications();\r\n        const profileValue = await readCharacteristicNumberValue(this.currentProfileCharacteristic);\r\n        await this.dispatch!(setCurrentProfile(profileValue));\r\n\r\n        this.temperatureCharacteristic = await this.service!.getCharacteristic(GhostCharacteristics.temperatures.uuid);\r\n        this.temperatureCharacteristic.addEventListener('characteristicvaluechanged', async (ev: Event) => {\r\n            if (this.getState!().ble.updating) {\r\n                return;\r\n            }\r\n            this.queue.enqueue(async () => {\r\n                const temperatureValue = await readTemperatures(this.temperatureCharacteristic!);\r\n                const oldTempValue = this.getState!().ble.temperatures;\r\n                if (\r\n                    (temperatureValue.length !== oldTempValue.length)\r\n                    || (temperatureValue.filter((value, index) => value !== oldTempValue[index]).length > 0)\r\n                ) {\r\n                    await this.dispatch!(setTemperatures(temperatureValue));\r\n                }\r\n            });\r\n        });\r\n        this.temperatureCharacteristic.startNotifications();\r\n        const temperatureValue = await readTemperatures(this.temperatureCharacteristic);\r\n        if (temperatureValue.length === 6) {\r\n            await this.dispatch!(setTemperatures(temperatureValue));\r\n        } \r\n        // else {\r\n        //     await this.dispatch!(setTemperatures([170, 185, 200, 210, 220, 220]));\r\n        // }\r\n\r\n        this.batteryService = await this.server!.getPrimaryService(GhostCharacteristics.batteryServiceUuid);\r\n        this.batteryCharacteristic = await this.batteryService.getCharacteristic(GhostCharacteristics.batteryLevelUuid);\r\n        const batteryValue = await readCharacteristicNumberValue(this.batteryCharacteristic);\r\n        await this.dispatch!(setBatteryLevel(batteryValue));\r\n    };\r\n\r\n    disconnect = async () => {\r\n        if (this.server) {\r\n            if (this.authCharacteristic) {\r\n                await new Promise(resolve => {\r\n                    this.authCharacteristic!.removeEventListener('characteristicvaluechanged', () => {\r\n                        resolve();\r\n                    });\r\n                });\r\n            }\r\n            if (this.currentProfileCharacteristic) {\r\n                await new Promise(resolve => {\r\n                    this.currentProfileCharacteristic!.removeEventListener('characteristicvaluechanged', () => {\r\n                        resolve();\r\n                    });\r\n                });\r\n            }\r\n            if (this.server.connected) {\r\n                await this.server.disconnect();\r\n            }\r\n        }\r\n        delete (this.server);\r\n    };\r\n\r\n    updateCurrentProfile = async (profile: number) => {\r\n        if (!this.currentProfileCharacteristic) {\r\n            return;\r\n        }\r\n\r\n        const s = profile.toString(16).padStart(2, '0');\r\n        const hexValue = stringToHex(s);\r\n\r\n        // if (this.getState!().ble.updating) {\r\n        return new Promise(resolve => {\r\n            this.queue.enqueue(async () => {\r\n                await this.currentProfileCharacteristic!.writeValue(hexValue);\r\n                resolve();\r\n            });\r\n        });\r\n        // }\r\n        // this.queue.enqueue(async () => {\r\n        //     try {\r\n        //     } catch (e) {\r\n        //         await this.updateCurrentProfile(profile);\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    updateTemperature = async (value: number[], profile: number) => {\r\n        if (!this.temperatureCharacteristic) {\r\n            return;\r\n        }\r\n\r\n        if (value.length < 6) {\r\n            throw new Error(\"Tried to write invalid temperature values.\");\r\n        }\r\n\r\n        if (value.filter(n => n !== 0).length === 0) {\r\n            throw new Error(\"Tried to write all zero temperature values.\");\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.queue.enqueue(async () => {\r\n                await writeTemperatures(this.temperatureCharacteristic!, value);\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        // const needsUpdate = this.getState!().ble.temperatures.filter((t, i) => t !== value[i]).length > 0;\r\n\r\n        // if (this.getState!().ble.updating) {\r\n            // this.queue.enqueue(async () => {\r\n            //     try {\r\n            //     } catch (e) {\r\n            //         await this.updateCurrentProfile(profile);\r\n            //     }\r\n            // });\r\n        // }\r\n    }\r\n\r\n    lock = async () => {\r\n        if (!this.statusCharacteristic) {\r\n            return;\r\n        }\r\n\r\n        // if (this.getState!().ble.updating) {\r\n        const status = this.getState!().ble.status | 0x1;\r\n        const buffer = new ArrayBuffer(1);\r\n        const dv = new DataView(buffer);\r\n        dv.setUint8(0, status);\r\n        return new Promise(resolve => {\r\n            this.queue.enqueue(async () => {\r\n                await this.statusCharacteristic!.writeValue(dv);\r\n                resolve();\r\n            });\r\n        });\r\n        // }\r\n    }\r\n\r\n    unlock = async () => {\r\n        if (!this.statusCharacteristic) {\r\n            return;\r\n        }\r\n\r\n        // if (this.getState!().ble.updating) {\r\n            const status = this.getState!().ble.status & 0xFE;\r\n            const buffer = new ArrayBuffer(1);\r\n            const dv = new DataView(buffer);\r\n            dv.setUint8(0, status);\r\n            return new Promise(resolve => {\r\n                this.queue.enqueue(async () => {\r\n                    await this.statusCharacteristic!.writeValue(dv);\r\n                    resolve();\r\n                });\r\n            });\r\n            // }\r\n    }\r\n\r\n    pauseNotifications = async () => {\r\n        // await this.authCharacteristic.stopNotifications();\r\n        await this.statusCharacteristic!.stopNotifications();\r\n        await this.currentProfileCharacteristic!.stopNotifications();\r\n        await this.temperatureCharacteristic!.stopNotifications();\r\n    };\r\n\r\n    startNotifications = async () => {\r\n        // await this.authCharacteristic.startNotifications();\r\n        await this.statusCharacteristic!.startNotifications();\r\n        await this.currentProfileCharacteristic!.startNotifications();\r\n        await this.temperatureCharacteristic!.startNotifications();\r\n    };\r\n};\r\n\r\nexport const stringToHex = (value: string): DataView => {\r\n    const buffer = new ArrayBuffer(6);\r\n    const dv = new DataView(buffer);\r\n    for (let i = 0; i < 6; i++) {\r\n        dv.setUint8(i, parseInt(value.substr(i * 2, 2), 16));\r\n    }\r\n    return dv;\r\n};\r\n\r\nexport const hexToString = (rawValue: DataView, bits: number = 8): string => {\r\n    let s = '';\r\n    if (rawValue && (rawValue.byteLength > 0)) {\r\n        if (bits === 8) {\r\n            for (let i = 0; i < rawValue.byteLength; i++) {\r\n                s += rawValue.getUint8(i).toString(16);\r\n            }\r\n        } else if (bits === 16) {\r\n            for (let i = 0; i < rawValue.byteLength; i += 2) {\r\n                s += rawValue.getUint16(i, false).toString(16).padStart(4, '0');\r\n            }\r\n        }\r\n    }\r\n    return s;\r\n}\r\n\r\nexport const readCharacteristicStringValue = async (characteristic: BluetoothRemoteGATTCharacteristic): Promise<string> => {\r\n    const rawValue = await characteristic.readValue();\r\n    return hexToString(rawValue);\r\n}\r\n\r\nexport const readCharacteristicNumberValue = async (characteristic: BluetoothRemoteGATTCharacteristic): Promise<number> => {\r\n    const rawValue = await characteristic.readValue();\r\n    if (rawValue.byteLength === 1) {\r\n        return rawValue.getUint8(0);\r\n    } else if (rawValue.byteLength === 2) {\r\n        return rawValue.getUint16(0, true);\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport const readTemperatures = async (characteristic: BluetoothRemoteGATTCharacteristic): Promise<number[]> => {\r\n    const rawValue = await characteristic.readValue();\r\n    const values = [];\r\n    for (let i = 0; i < rawValue.byteLength; i += 2) {\r\n        values.push(rawValue.getUint16(i, false));\r\n    }\r\n    return values;\r\n}\r\n\r\nexport const writeTemperatures = async (characteristic: BluetoothRemoteGATTCharacteristic, value: number[]): Promise<void> => {\r\n    if (value.length < 6) {\r\n        return;\r\n    }\r\n\r\n    const buffer = new ArrayBuffer(12);\r\n    const dv = new DataView(buffer);\r\n    for (let i = 0; i < 6; i++) {\r\n        let currentValue = value[i];\r\n        switch (i) {\r\n            case 0: {\r\n                currentValue = 170;\r\n                break;\r\n            }\r\n            case 1: {\r\n                currentValue = 185;\r\n                break;\r\n            }\r\n            case 2: {\r\n                currentValue = 200;\r\n                break;\r\n            }\r\n            case 5: {\r\n                currentValue = 220;\r\n                break;\r\n            }\r\n        }\r\n        dv.setUint16(i * 2, currentValue, false);\r\n    }\r\n\r\n    //alert(hexToString(dv, 16));\r\n    await characteristic.writeValue(dv);\r\n}\r\n\r\nexport const generateRandomKey = (): DataView => {\r\n    const key = randomBytes(6);\r\n    const buffer = new ArrayBuffer(6);\r\n    const dv = new DataView(buffer);\r\n    for (let i = 0; i < key.byteLength; i++) {\r\n        dv.setUint8(i, key.readUInt8(i));\r\n    }\r\n    return dv;\r\n}\r\n\r\nconst ghostBle = new GhostBle();\r\nexport { ghostBle as GhostBle };","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { IBleState } from '../state/IBleState';\r\nimport { AppThunk } from '../store';\r\nimport { GhostBle } from '../../ble/GhostBle';\r\n\r\nconst initialState: IBleState = {\r\n  connecting: false,\r\n  connected: false,\r\n  updating: false,\r\n  connectAttempts: 0,\r\n  locked: false,\r\n  authKey: localStorage.getItem('ghostmv1.auth') || '',\r\n  status: 0,\r\n  battery: 0,\r\n  profile: 0,\r\n  temperatures: [170, 185, 200, 210, 220, 220],\r\n};\r\n\r\nconst disconnect = (): AppThunk => async (dispatch, getState) => {\r\n  await GhostBle.disconnect();\r\n  await dispatch(disconnected());\r\n};\r\n\r\nconst connect = (allDevices: boolean = false): AppThunk => async (dispatch, getState) => {\r\n  try {\r\n    await GhostBle.connect(allDevices);\r\n    await dispatch(connectSuccess());\r\n  } catch (e) {\r\n    //dispatch(disconnected());\r\n    return;\r\n  }\r\n};\r\n\r\nconst pair = (allDevices: boolean): AppThunk => async (dispatch, getState) => {\r\n  try {\r\n    await GhostBle.pair(allDevices);\r\n    await dispatch(connectSuccess());\r\n  } catch (e) {\r\n    return;\r\n  }\r\n};\r\n\r\nconst updateCurrentProfile = (profile: number): AppThunk => async (dispatch, getState) => {\r\n  try {\r\n    if (getState().ble.locked) {\r\n      return;\r\n    }\r\n    await dispatch(pauseNotifications());\r\n    await dispatch(startUpdateProfile());\r\n    await dispatch(setCurrentProfileForce(profile));\r\n    await GhostBle.updateCurrentProfile(profile);\r\n  } finally {\r\n    await dispatch(startNotifications());\r\n    setTimeout(async () => {\r\n      await dispatch(completeUpdateProfile());\r\n    }, 200);\r\n  }\r\n}\r\n\r\nconst updateTemperature = (values: number[], profile: number): AppThunk => async (dispatch, getState) => {\r\n  try {\r\n    if (getState().ble.locked) {\r\n      return;\r\n    }\r\n    await dispatch(pauseNotifications());\r\n    await dispatch(startUpdate());\r\n    await GhostBle.updateTemperature(values, profile);\r\n    await dispatch(setTemperatures(values));\r\n  } finally {\r\n    await dispatch(startNotifications());\r\n    setTimeout(async () => {\r\n      await dispatch(completeUpdate());\r\n    }, 200);  \r\n  }\r\n}\r\n\r\nconst lock = (): AppThunk => async (dispatch, getState) => {\r\n  try {\r\n    await dispatch(pauseNotifications());\r\n    await dispatch(requestLock());\r\n    await GhostBle.lock();\r\n    await dispatch(setStatus(getState().ble.status | 0x1))\r\n  } finally {\r\n    await dispatch(completeLock());\r\n    await dispatch(startNotifications());\r\n    setTimeout(async () => {\r\n      await dispatch(completeUpdate());\r\n    }, 200);  \r\n  }\r\n}\r\n\r\nconst unlock = (): AppThunk => async (dispatch, getState) => {\r\n  try {\r\n    await dispatch(pauseNotifications());\r\n    await dispatch(requestUnlock());\r\n    await GhostBle.unlock();\r\n    await dispatch(setStatus(getState().ble.status & 0xFE))\r\n  } finally {\r\n    await dispatch(completeUnlock());\r\n    await dispatch(startNotifications());\r\n    setTimeout(async () => {\r\n      await dispatch(completeUpdate());\r\n    }, 200);  \r\n  }\r\n}\r\n\r\nconst startNotifications = (): AppThunk => async (dispatch, getState) => {\r\n  await GhostBle.startNotifications();\r\n}\r\n\r\nconst pauseNotifications = (): AppThunk => async (dispatch, getState) => {\r\n  await GhostBle.pauseNotifications();\r\n}\r\n\r\nconst bleSlice = createSlice({\r\n  name: 'BLE',\r\n  initialState,\r\n  reducers: {\r\n    startUpdate:  (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      updating: true,\r\n    }),\r\n    completeUpdate:  (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      updating: false,\r\n    }),\r\n    startUpdateProfile:  (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      updating: true,\r\n    }),\r\n    completeUpdateProfile:  (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      updating: false,\r\n    }),\r\n    connectStart: (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      connecting: true,\r\n      connected: false,\r\n      error: undefined,\r\n      connectAttempts: state.connectAttempts+1,\r\n    }),\r\n    connectSuccess: (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      connecting: false,\r\n      connected: true,\r\n      error: undefined,\r\n    }),\r\n    connectFailed: (state: IBleState, action: PayloadAction<string>) => ({\r\n      ...state,\r\n      connecting: false,\r\n      connected: false,\r\n      error: action.payload,\r\n    }),\r\n    disconnected: (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      connecting: false,\r\n      connected: false,\r\n      error: undefined,\r\n      connectAttempts: 0,\r\n    }),\r\n    setAuthKey: (state: IBleState, action: PayloadAction<string>) => ({\r\n      ...state,\r\n      authKey: action.payload,\r\n    }),\r\n    setStatus: (state: IBleState, action: PayloadAction<number>) => ({\r\n      ...state,\r\n      status: action.payload,\r\n      locked: (action.payload & 0x1) === 0x1,\r\n    }),\r\n    setBatteryLevel: (state: IBleState, action: PayloadAction<number>) => ({\r\n      ...state,\r\n      battery: action.payload,\r\n    }),\r\n    setCurrentProfileForce: (state: IBleState, action: PayloadAction<number>) => {\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n      };\r\n    },\r\n    setCurrentProfile: (state: IBleState, action: PayloadAction<number>) => {\r\n      if (state.updating) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          profile: action.payload,\r\n        };\r\n      }\r\n    },\r\n    setTemperatures: (state: IBleState, action: PayloadAction<number[]>) => ({\r\n      ...state,\r\n      temperatures: action.payload\r\n    }),\r\n    clearError: (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      error: undefined,\r\n    }),\r\n    requestLock: (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      updating: true,\r\n      locking: true,\r\n    }),\r\n    requestUnlock: (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      updating: true,\r\n      locking: true,\r\n    }),\r\n    completeLock: (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      updating: false,\r\n      locking: false,\r\n      locked: true,\r\n    }), \r\n    completeUnlock: (state: IBleState, action: PayloadAction) => ({\r\n      ...state,\r\n      updating: false,\r\n      locking: false,\r\n      locked: false,\r\n    }),\r\n  }\r\n});\r\n\r\nexport { \r\n  connect, disconnect, pair, \r\n  updateCurrentProfile, updateTemperature, \r\n  startNotifications, pauseNotifications, \r\n  lock, unlock, \r\n};\r\n\r\nexport const { \r\n  connectStart, connectSuccess, connectFailed, \r\n  disconnected, \r\n  setAuthKey,\r\n  setStatus,\r\n  setBatteryLevel, \r\n  setCurrentProfile,\r\n  setCurrentProfileForce,\r\n  setTemperatures,\r\n  clearError,\r\n  startUpdate,\r\n  completeUpdate,\r\n  startUpdateProfile,\r\n  completeUpdateProfile,\r\n  requestLock,\r\n  requestUnlock,\r\n  completeLock,\r\n  completeUnlock,\r\n} = bleSlice.actions;\r\nexport default bleSlice.reducer","import {\n  IonContent,\n  IonHeader,\n  IonLabel,\n  IonList,\n  IonPage,\n  IonToolbar,\n  IonImg,\n  IonItem,\n  IonSlides,\n  IonSlide,\n  IonRange,\n  IonIcon,\n  IonAlert\n} from '@ionic/react';\nimport React, { useEffect, useState, createRef, useRef, useCallback } from 'react';\nimport './Dashboard.scss';\n\nimport logoSvg from '../../assets/logo.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../store';\nimport { AppDispatch } from '../../store/store';\nimport { updateCurrentProfile, updateTemperature, setTemperatures, lock, unlock } from '../../store/reducers/bleReducer';\nimport { thermometer } from 'ionicons/icons';\nimport { RangeChangeEventDetail } from '@ionic/core';\n\nconst slideLabels = ['Low', 'Medium', 'High', 'F1', 'F2', 'Concentrates'];\n\nconst version = require('../../../package.json').version;\n\ninterface IDashboardProps {\n  readonly displayLockDialog: boolean;\n  readonly dismissLockDialogCallback: () => void;\n}\n\nconst Dashboard: React.FC<IDashboardProps> = (props: IDashboardProps) => {\n  const temperatures = useSelector((state: RootState) => state.ble.temperatures);\n  const profile = useSelector((state: RootState) => state.ble.profile);\n  const updating = useSelector((state: RootState) => state.ble.updating);\n  const battery = useSelector((state: RootState) => state.ble.battery);\n  const locked = useSelector((state: RootState) => (state.ble.status & 1) === 1);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [currentProfile, setCurrentProfile] = useState(-1);\n  const [tempDialogOpen, setTempDialogOpen] = useState(false);\n  //const [initialized, setInitialized] = useState(false);\n\n  const slider = createRef<any>();\n  const currentTemp = useRef(0);\n\n  const updateTemperatureDispatch = useCallback((value: number) => {\n    const newTemp = [\n      ...temperatures.slice(0, profile - 1),\n      value,\n      ...temperatures.slice(profile)\n    ];\n    dispatch(updateTemperature(newTemp, profile));\n  }, [temperatures, profile, dispatch]);\n\n\n  useEffect(() => {\n    if (slider && slider.current && (profile > 0)) {\n      try {\n          if (slider.current) {\n            slider.current.getActiveIndex().then((index: number) => {\n              console.log(`Index1: ${index}`);\n              if ((profile !== (index + 1)) && (profile > 0) && slider.current) {\n                slider.current.slideTo(profile - 1);\n              }\n            });\n          }\n      } catch {}\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profile]);\n\n  const slideChanged = async (ev: CustomEvent) => {\n    if (!slider.current) {\n      return;\n    }\n\n    if (currentProfile === profile) {\n      const index = await slider.current.getActiveIndex();\n    console.log(`Index2: ${index}`);\n    if (index !== (profile - 1)) {\n        dispatch(updateCurrentProfile(index+1));\n        setCurrentProfile(index+1);\n      }\n    } else if (currentProfile !== profile) {\n      setCurrentProfile(profile);\n    }\n  };\n\n  const tempChange = (ev: CustomEvent<RangeChangeEventDetail>) => {\n    const value = ev.detail.value as number;\n    const newTemp = [\n      ...temperatures.slice(0, profile - 1),\n      value,\n      ...temperatures.slice(profile)\n    ];\n    dispatch(setTemperatures(newTemp));\n    setTimeout(() => {\n      if (currentTemp.current === value) {\n        dispatch(updateTemperature(newTemp, profile));\n      }\n    }, 1000);\n    currentTemp.current = value;\n  };\n\n  const getBatteryIcon = () => {\n    //    const batteryLevel = Math.round(battery / 25);\n    return <svg width={42} height={18} className=\"battery\" key={`batteryIndicator_${battery}`}>\n      <rect width={34} height={14}\n        stroke=\"#CCC\" strokeWidth={2}\n        x={2} y={2} rx={2} ry={2}\n        className=\"battery-container\" />\n      <rect\n        height={12}\n        width={Math.round(battery / 100 * 32)}\n        x={3} y={3} rx={2} ry={2}\n        className=\"battery-gauge\" />\n      <rect width={4} height={8} x={36} y={6} className=\"battery-button\" />\n      {/* <text x={4} y={13} className=\"battery-text\">\n        {battery.toFixed(0)}%\n      </text> */}\n    </svg>;\n\n    // switch (batteryLevel) {\n    //   default: {\n    //     return batteryDead;\n    //   }\n    //   case 2: {\n    //     return batteryCharging;\n    //   }\n    //   case 3: {\n    //     return batteryCharging;\n    //   }\n    //   case 4: {\n    //     return batteryFull;\n    //   }\n  };\n\n  return (\n    <IonPage className=\"dashboard\">\n      <IonLabel class=\"version-label\">{version}</IonLabel>\n      <IonHeader className=\"dashboard-header\">\n        <IonToolbar className=\"dashboard-header-toolbar\">\n          <div slot=\"start\" className=\"dashboard-header-toolbar-battery-icon\">\n            {getBatteryIcon()}\n          </div>\n          <IonImg className=\"dashboard-header-toolbar-logo\" src={logoSvg} />\n          <IonIcon slot=\"end\" />\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"dashboard-content\">\n        <IonList className=\"dashboard-content-list\" lines=\"none\">\n          {/* <IonListHeader className=\"dashboard-content-list-header\">\n            <IonLabel>Temperature</IonLabel>\n          </IonListHeader> */}\n          <IonItem className=\"dashboard-content-list-item\">\n            <IonSlides options={{\n              allowSlideNext: !updating,\n              allowSlidePrev: !updating,\n              initialSlide: profile > 0 ? profile-1 : 0,\n            }} pager={true} ref={slider} onIonSlideDidChange={slideChanged}>\n              {temperatures.map((temperature, index) => {\n                return <IonSlide key={index} title={index.toString()}>\n                  <div className=\"swiper-slide-content\">\n                    <div className=\"swiper-slide-content-text\" onClick={() => setTempDialogOpen(true)}>\n                      {temperature.toFixed(0)}&deg;C\n                    </div>\n                  </div>\n                  <div className=\"swiper-slide-footer\">\n                    <div className=\"swiper-slide-footer-text\">\n                      {slideLabels[index]}\n                    </div>\n                  </div>\n                </IonSlide>;\n              })}\n            </IonSlides>\n          </IonItem>\n          <IonItem className=\"dashboard-content-list-footer\" hidden={profile !== 4 && profile !== 5}>\n            <IonRange min={100} max={220} step={1} value={profile > 0 && profile <= 6 && temperatures.length === 6 ? temperatures[profile - 1] : 0} snaps={true} color=\"danger\" onIonChange={tempChange}>\n              <IonIcon slot=\"start\" size=\"small\" color=\"danger\" icon={thermometer} />\n              <IonIcon slot=\"end\" color=\"danger\" icon={thermometer} />\n            </IonRange>\n          </IonItem>\n          <IonItem className=\"dashboard-content-list-footer\" hidden={profile === 4 || profile === 5}>\n            &nbsp;\n          </IonItem>\n        </IonList>\n      </IonContent>\n      <IonAlert\n        isOpen={tempDialogOpen}\n        onDidDismiss={() => setTempDialogOpen(false)}\n        header={'New Temperature'}\n        inputs={[\n          {\n            name: 'temperature',\n            type: 'number',\n            label: 'Temperature',\n            placeholder: '<New Value>',\n            value: profile >= 1 && profile <= 6 ? temperatures[profile - 1] : 0,\n            min: 100,\n            max: 220,\n          },\n        ]}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel');\n            }\n          },\n          {\n            text: 'Ok',\n            handler: (values) => {\n              const value = parseInt(values.temperature);\n              if (value >= 100 && value <= 220) {\n                updateTemperatureDispatch(value);\n              }\n            }\n          }\n        ]}\n      />\n      <IonAlert\n        isOpen={props.displayLockDialog}\n        onDidDismiss={() => props.dismissLockDialogCallback()}\n        header={locked ? 'Unlock?' : 'Lock?'}\n        message={`Would you like to ${locked ? \"unlock\" : \"lock\"} your Ghost MV1 vaporizer?`}\n        buttons={[\n          {\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n          },\n          {\n            text: 'Ok',\n            handler: (values) => {\n              if (locked) {\n                dispatch(unlock());\n              } else {\n                dispatch(lock());\n              }\n            }\n          }\n        ]}\n      />\n    </IonPage>\n  );\n};\n\nexport default Dashboard;\n","import {\n  IonContent,\n  IonHeader,\n  IonLabel,\n  IonList,\n  IonPage,\n  IonToolbar,\n  IonItem,\n  IonButton,\n  IonLoading,\n  IonCheckbox,\n  IonImg,\n} from '@ionic/react';\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './Connect.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../store';\nimport { AppDispatch } from '../../store/store';\nimport { connect, disconnect, pair } from '../../store/reducers/bleReducer';\nimport { RouteComponentProps } from 'react-router';\nimport { CheckboxChangeEventDetail } from '@ionic/core';\n\nimport logoSvg from '../../assets/logo.svg';\n\nconst version = require('../../../package.json').version;\n\nconst Connect: React.FC<RouteComponentProps> = ({ history }) => {\n  const [pairingMode, setPairingMode] = useState(false);\n  const allDevices = useRef(false);\n  const [cancel, setCancel] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('Loading ...');\n\n  const state = useSelector((state: RootState) => ({\n    connected: state.ble.connected,\n    error: state.ble.error,\n    connectAttempts: state.ble.connectAttempts,\n    connecting: state.ble.connecting,\n    hasKey: state.ble.authKey !== '',\n  }));\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const pairBLE = async () => {\n    setCancel(false);\n    dispatch(pair(allDevices.current));\n  };\n\n  const connectBLE = useCallback(async () => {\n    dispatch(connect(allDevices.current));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if ((state.connectAttempts) > 0 && !state.connecting && !state.connected && !cancel) {\n      new Promise(resolve => setTimeout(() => resolve(), 1000)).then(() => {\n        connectBLE();\n      });\n      return;\n    }\n\n    if (state.connected && !state.connecting) {\n      history.push('/dashboard');\n    }\n\n  }, [state.connectAttempts, cancel, state.connected, state.connecting, history, connectBLE]);\n\n  useEffect(() => {\n    const newMessage = (state.connectAttempts > 1 ? `Retrying (attempt #${state.connectAttempts}) ...` : 'Connecting ...');\n    if (newMessage !== loadingMessage) {\n      setLoadingMessage(newMessage);\n      const elem = document.querySelector('div.loading-wrapper div.loading-content');\n      if (elem) {\n        elem.innerHTML = newMessage;\n      }\n    }\n  }, [loadingMessage, state.error, state.connectAttempts]);\n\n  const pairingModeChange = (event: CustomEvent<CheckboxChangeEventDetail>) => {\n    setPairingMode(event.detail.checked);\n  };\n\n  const allDevicesChange = (event: CustomEvent<CheckboxChangeEventDetail>) => {\n    allDevices.current = event.detail.checked;\n  };\n\n  return (\n    <IonPage className=\"connect\">\n      <IonLabel class=\"version-label\">{version}</IonLabel>\n      <IonHeader className=\"connect-header\">\n        <IonToolbar className=\"connect-header-toolbar\">\n          <IonImg className=\"connect-header-toolbar-logo\" src={logoSvg} />\n        </IonToolbar>\n      </IonHeader>\n      <IonContent className=\"connect-content\">\n        <IonList lines=\"none\" className=\"connect-content-list\">\n          {/* <IonListHeader className=\"connect-content-list-header\">\n            <IonLabel>Connect</IonLabel>\n          </IonListHeader> */}\n          <IonItem class=\"connect-content-list-spacer\" />\n          <IonItem className=\"connect-content-list-button\" hidden={(state.error !== undefined) || state.hasKey || state.connecting || state.connected}>\n            <IonButton onClick={pairBLE} size=\"large\">Pair</IonButton>\n          </IonItem>\n          <IonItem className=\"connect-content-list-button\" hidden={(state.error !== undefined) || state.connecting || state.connected || !state.hasKey}>\n            <IonButton onClick={pairingMode ? pairBLE : connectBLE} size=\"large\">\n              {pairingMode ? 'Pair' : 'Connect'}\n            </IonButton>\n          </IonItem>\n          <IonItem className=\"connect-content-list-options\" hidden={(state.error !== undefined) || state.connecting || state.connected || !state.hasKey}>\n            <IonCheckbox\n              defaultChecked={pairingMode}\n              onIonChange={pairingModeChange}\n              slot=\"start\"\n            />\n            <IonLabel>Pair device again?</IonLabel>\n          </IonItem>\n          <IonItem className=\"connect-content-list-options\" hidden={(state.error !== undefined) || state.connecting || state.connected || !state.hasKey}>\n            <IonCheckbox\n              defaultChecked={allDevices.current}\n              onIonChange={allDevicesChange}\n              slot=\"start\"\n            />\n            <IonLabel>Show all devices?</IonLabel>\n          </IonItem>\n          <IonItem class=\"connect-content-list-spacer\" />\n        </IonList>\n      </IonContent>\n      <IonLoading\n        isOpen={(state.error !== undefined) || state.connecting}\n        message={loadingMessage}\n        backdropDismiss={true}\n        \n        onDidDismiss={() => {\n          setCancel(true);\n          dispatch(disconnect());\n        }}\n      />\n    </IonPage>\n  );\n};\n\nexport default Connect;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n} from '@ionic/react';\nimport { IonReactHashRouter } from '@ionic/react-router';\nimport { speedometer, unlock, lock } from 'ionicons/icons';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport Connect from './pages/Connect/Connect';\nimport { GhostBle } from './ble/GhostBle';\nimport { useSelector } from 'react-redux';\nimport { RootState } from './store';\n\nconst App: React.FC = () => {\n  const connected = useSelector((state: RootState) => state.ble.connected);\n  const locked = useSelector((state: RootState) => state.ble.locked);\n  const [displayLockDialog, setDisplayLockDialog] = useState(false);\n\n  const unloadFunc = async () => {\n    await GhostBle.disconnect();\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', unloadFunc);\n    \n    return () => {\n      window.removeEventListener('beforeunload', unloadFunc);\n    };\n  }, []);\n\n  useEffect(() => {\n\n  }, [locked]);\n\n  const ConnectRedirect = () => <Redirect to=\"/connect\" />;\n  const DashboardComponent = () => (\n    <Dashboard \n      displayLockDialog={displayLockDialog}\n      dismissLockDialogCallback={() => {\n        setDisplayLockDialog(false);\n      }}\n    />\n  );\n\n\n  const requestLockClicked = async (event: React.MouseEvent<HTMLIonTabButtonElement>) => {\n    setDisplayLockDialog(true);\n  };\n\n  return (\n    <IonApp>\n      <IonReactHashRouter>\n        <IonTabs>\n          <IonRouterOutlet>\n            <Route path=\"/connect\" component={Connect} exact={true} />\n            <Route path=\"/dashboard\" component={!connected ? ConnectRedirect : DashboardComponent} exact={true} />\n            <Route path=\"/\" component={ConnectRedirect} exact={true} />\n          </IonRouterOutlet>\n          <IonTabBar slot=\"bottom\">\n            <IonTabButton tab=\"dashboard\" href=\"/dashboard\" hidden={!connected}>\n              <IonIcon icon={speedometer} />\n              <IonLabel>Temperature</IonLabel>\n            </IonTabButton>\n            {\n              locked \n              ? <IonTabButton tab=\"lock\" hidden={!connected} onClick={requestLockClicked}>\n                  <IonIcon icon={lock} />\n                  <IonLabel>{'Unlock'}</IonLabel>\n              </IonTabButton>\n              : <IonTabButton tab=\"lock\" hidden={!connected} onClick={requestLockClicked}>\n                  <IonIcon icon={unlock } />\n                  <IonLabel>{'Lock'}</IonLabel>    \n              </IonTabButton>\n            }\n          </IonTabBar>\n        </IonTabs>\n      </IonReactHashRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n","import { combineReducers } from 'redux';\r\nimport bleReducer from './reducers/bleReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ble: bleReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { configureStore, Action, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { rootReducer, RootState } from '.';\r\nimport { GhostBle } from '../ble/GhostBle';\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nGhostBle.initialize(store.dispatch, store.getState);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.eba00710.svg\";"],"sourceRoot":""}